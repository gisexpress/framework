//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

namespace System.ComponentModel
{
    public interface IPropertyDescriptor
    {
        event Action<IPropertyDescriptor> ValueChanged;
        
        string Name
        {
            get;
            set;
        }

        string FullName
        {
            get;
        }

        string Category
        {
            get;
            set;
        }

        bool CategoryChecked
        {
            get;
            set;
        }

        string DisplayName
        {
            get;
            set;
        }

        string Description
        {
            get;
            set;
        }

        bool IsBrowsable
        {
            get;
            set;
        }

        bool IsReadOnly
        {
            get;
            set;
        }

        Type PropertyType
        {
            get;
            set;
        }

        TypeCode PropertyTypeCode
        {
            get;
        }

        IPropertyDescriptor this[string name]
        {
            get;
        }

        IPropertyCollection Owner
        {
            get;
            set;
        }

        IPropertyDescriptor Parent
        {
            get;
            set;
        }

        bool HasChildren
        {
            get;
        }

        Attribute[] Attributes
        {
            get;
            set;
        }

        IPropertyCollection ChildProperties
        {
            get;
        }

        object Editor
        {
            get;
            set;
        }

        object Value
        {
            get;
            set;
        }

        T GetValue<T>();
        T GetValue<T>(string name);

        bool CanResetValue(object component);
        void ResetValue(object component);

        object GetValue(object component);
        void SetValue(object component, object value);
    }
}
