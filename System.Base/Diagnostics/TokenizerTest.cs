//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.Diagnostics;

namespace System.IO.Diagnostics
{
    internal class TokenizerTest : IUnitTest
    {
        public int Priority
        {
            get { return 0; }
        }

        public void Run()
        {
            Debug.Assert(Tokenizer.Parse("POINT(30 50)").Equals("POINT", '(', 30, 50, ')'));
            Debug.Assert(Tokenizer.Parse("POINT(30.33333333 50.00000001)").Equals("POINT", '(', 30.33333333, 50.00000001, ')'));
            Debug.Assert(Tokenizer.Parse("POINT(-30 50)").Equals("POINT", '(', -30, 50, ')'));
            Debug.Assert(Tokenizer.Parse("POINT(30.33333333 -50.00000001)").Equals("POINT", '(', 30.33333333, -50.00000001, ')'));
            Debug.Assert(Tokenizer.Parse("POINT(-.30 +.50)").Equals("POINT", '(', -.3, .5, ')'));
            Debug.Assert(Tokenizer.Parse("POINT(.33333333 .00000001)").Equals("POINT", '(', .33333333, .00000001, ')'));

            Debug.Assert(Tokenizer.Parse("A+B").Equals("A", '+', "B"));
            Debug.Assert(Tokenizer.Parse("A-B").Equals("A", '-', "B"));
            Debug.Assert(Tokenizer.Parse("A--B").Equals("A", '-', '-', "B"));
            Debug.Assert(Tokenizer.Parse("A-1-B").Equals("A", '-', 1, '-', "B"));

            Debug.Assert(Tokenizer.Parse("Shape.Buffer(10)").Equals("Shape", '.', "Buffer", '(', 10, ')'));
        }
    }
}
