//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2017. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.Reflection;

namespace System.Runtime
{
    [Obfuscation(Exclude = true)]
    public enum BinaryOperatorType
    {
        None = 0,

        /// <summary>
        /// Represents the Boolean equality operator.
        /// </summary>
        Equals,

        /// <summary>
        /// Represents the Boolean inequality operator.
        /// </summary>
        NotEquals,

        /// <summary>
        /// Represents the Boolean greater-than operator.
        /// </summary>
        Greater,

        /// <summary>
        /// Represents the Boolean less-than operator.
        /// </summary>
        Less,

        /// <summary>
        /// Represents the Boolean less-than-or-equal-to operator.
        /// </summary>
        LessOrEqual,

        /// <summary>
        /// Represents the Boolean greater-than-or-equal-to operator.
        /// </summary>
        GreaterOrEqual,

        /// <summary>
        /// Represents the Like operator.
        /// </summary>
        Like,

        /// <summary>
        /// Represents the Case Insensitive Like operator.
        /// </summary>
        iLike,

        /// <summary>
        /// Represents the LikeAll operator.
        /// </summary>
        LikeAll,

        /// <summary>
        /// Represents the Case Insensitive LikeAll operator.
        /// </summary>
        iLikeAll,

        /// <summary>
        /// Represents the logical AND operator.
        /// </summary>
        And,

        /// <summary>
        /// Represents the bitwise AND operator.
        /// </summary>
        BitwiseAnd,

        /// <summary>
        /// Represents the logical OR operator.
        /// </summary>
        Or,

        /// <summary>
        /// Represents the bitwise OR operator.
        /// </summary>
        BitwiseOr,

        /// <summary>
        /// Represents the bitwise XOR operator.
        /// </summary>
        BitwiseXor,

        /// <summary>
        /// Left shifts the bits of an expression.
        /// </summary>
        BitwiseLeftShift,

        /// <summary>
        /// Right shifts the bits of an expression, maintaining sign.
        /// </summary>
        BitwiseRightShift,

        /// <summary>
        /// Represents the division operator.
        /// </summary>
        Divide,

        /// <summary>
        /// Represents the modulus operator (computes the remainder after dividing its first operand by its second).
        /// </summary>
        Modulo,

        /// <summary>
        /// Represents the multiplication operator.
        /// </summary>
        Multiply,

        /// <summary>
        /// Represents the addition operator.
        /// </summary>
        Add,

        /// <summary>
        /// Represents the subtraction operator.
        /// </summary>
        Subtract,
    }
}
