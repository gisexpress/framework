//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2017. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.Drawing;
namespace System.Data.Dxf
{
    internal class AcDbLayerTableRecord : AcDbTableRecord
    {
        public string Name
        {
            get;
            set;
        }

        /// <summary>
        /// 1 = Layer is frozen; otherwise layer is thawed
        /// 2 = Layer is frozen by default in new viewports
        /// 4 = Layer is locked
        /// 16 = If set, table entry is externally dependent on an xref
        /// 32 = If both this bit and bit 16 are set, the externally dependent xref has been successfully resolved
        /// 64 = If set, the table entry was referenced by at least one entity in the drawing the last time the drawing was edited. 
        /// </summary>
        public int StandardFlags
        {
            get;
            set;
        }

        public Color Color
        {
            get { return GetColor(ColorNumber); }
        }

        /// <summary>
        /// Color number (if negative, layer is off)
        /// </summary>
        public int ColorNumber
        {
            get;
            set;
        }

        public string LineTypeName
        {
            get;
            set;
        }

        /// <summary>
        /// Plotting flag. If set to 0, do not plot this layer
        /// </summary>
        public bool PlottingFlag
        {
            get;
            set;
        }

        public int Lineweight
        {
            get;
            set;
        }

        public string PlotStyleNameHandle
        {
            get;
            set;
        }

        public override void Read(DxfReader reader)
        {
            while (reader.Read())
            {
                switch (reader.GroupCode)
                {
                    case 2:
                        Name = reader.GetString();
                        continue;
                    case 6:
                        LineTypeName = reader.GetString();
                        continue;
                    case 62:
                        ColorNumber = reader.GetInt32();
                        continue;
                    case 70:
                        StandardFlags = reader.GetInt32();
                        continue;
                    case 290:
                        PlottingFlag = reader.GetByte() > 0;
                        continue;
                    case 347:
                        continue;
                    case 370:
                        Lineweight = reader.GetInt32();
                        continue;
                    case 390:
                        PlotStyleNameHandle = reader.GetString();
                        continue;
                }

                break;
            }
        }

        static Color GetColor(int number)
        {
            switch (number)
            {
                case 0: return Color.FromArgb(0, 0, 0);
                case 1: return Color.FromArgb(255, 0, 0);
                case 2: return Color.FromArgb(255, 255, 0);
                case 3: return Color.FromArgb(0, 255, 0);
                case 4: return Color.FromArgb(0, 255, 255);
                case 5: return Color.FromArgb(0, 0, 255);
                case 6: return Color.FromArgb(255, 0, 255);
                case 7: return Color.FromArgb(255, 255, 255);
                case 8: return Color.FromArgb(65, 65, 65);
                case 9: return Color.FromArgb(128, 128, 128);
                case 10: return Color.FromArgb(255, 0, 0);
                case 11: return Color.FromArgb(255, 170, 170);
                case 12: return Color.FromArgb(189, 0, 0);
                case 13: return Color.FromArgb(189, 126, 126);
                case 14: return Color.FromArgb(129, 0, 0);
                case 15: return Color.FromArgb(129, 86, 86);
                case 16: return Color.FromArgb(104, 0, 0);
                case 17: return Color.FromArgb(104, 69, 69);
                case 18: return Color.FromArgb(79, 0, 0);
                case 19: return Color.FromArgb(79, 53, 53);
                case 20: return Color.FromArgb(255, 63, 0);
                case 21: return Color.FromArgb(255, 191, 170);
                case 22: return Color.FromArgb(189, 46, 0);
                case 23: return Color.FromArgb(189, 141, 126);
                case 24: return Color.FromArgb(129, 31, 0);
                case 25: return Color.FromArgb(129, 96, 86);
                case 26: return Color.FromArgb(104, 25, 0);
                case 27: return Color.FromArgb(104, 78, 69);
                case 28: return Color.FromArgb(79, 19, 0);
                case 29: return Color.FromArgb(79, 59, 53);
                case 30: return Color.FromArgb(255, 127, 0);
                case 31: return Color.FromArgb(255, 212, 170);
                case 32: return Color.FromArgb(189, 94, 0);
                case 33: return Color.FromArgb(189, 157, 126);
                case 34: return Color.FromArgb(129, 64, 0);
                case 35: return Color.FromArgb(129, 107, 86);
                case 36: return Color.FromArgb(104, 52, 0);
                case 37: return Color.FromArgb(104, 86, 69);
                case 38: return Color.FromArgb(79, 39, 0);
                case 39: return Color.FromArgb(79, 66, 53);
                case 40: return Color.FromArgb(255, 191, 0);
                case 41: return Color.FromArgb(255, 234, 170);
                case 42: return Color.FromArgb(189, 141, 0);
                case 43: return Color.FromArgb(189, 173, 126);
                case 44: return Color.FromArgb(129, 96, 0);
                case 45: return Color.FromArgb(129, 118, 86);
                case 46: return Color.FromArgb(104, 78, 0);
                case 47: return Color.FromArgb(104, 95, 69);
                case 48: return Color.FromArgb(79, 59, 0);
                case 49: return Color.FromArgb(79, 73, 53);
                case 50: return Color.FromArgb(255, 255, 0);
                case 51: return Color.FromArgb(255, 255, 170);
                case 52: return Color.FromArgb(189, 189, 0);
                case 53: return Color.FromArgb(189, 189, 126);
                case 54: return Color.FromArgb(129, 129, 0);
                case 55: return Color.FromArgb(129, 129, 86);
                case 56: return Color.FromArgb(104, 104, 0);
                case 57: return Color.FromArgb(104, 104, 69);
                case 58: return Color.FromArgb(79, 79, 0);
                case 59: return Color.FromArgb(79, 79, 53);
                case 60: return Color.FromArgb(191, 255, 0);
                case 61: return Color.FromArgb(234, 255, 170);
                case 62: return Color.FromArgb(141, 189, 0);
                case 63: return Color.FromArgb(173, 189, 126);
                case 64: return Color.FromArgb(96, 129, 0);
                case 65: return Color.FromArgb(118, 129, 86);
                case 66: return Color.FromArgb(78, 104, 0);
                case 67: return Color.FromArgb(95, 104, 69);
                case 68: return Color.FromArgb(59, 79, 0);
                case 69: return Color.FromArgb(73, 79, 53);
                case 70: return Color.FromArgb(127, 255, 0);
                case 71: return Color.FromArgb(212, 255, 170);
                case 72: return Color.FromArgb(94, 189, 0);
                case 73: return Color.FromArgb(157, 189, 126);
                case 74: return Color.FromArgb(64, 129, 0);
                case 75: return Color.FromArgb(107, 129, 86);
                case 76: return Color.FromArgb(52, 104, 0);
                case 77: return Color.FromArgb(86, 104, 69);
                case 78: return Color.FromArgb(39, 79, 0);
                case 79: return Color.FromArgb(66, 79, 53);
                case 80: return Color.FromArgb(63, 255, 0);
                case 81: return Color.FromArgb(191, 255, 170);
                case 82: return Color.FromArgb(46, 189, 0);
                case 83: return Color.FromArgb(141, 189, 126);
                case 84: return Color.FromArgb(31, 129, 0);
                case 85: return Color.FromArgb(96, 129, 86);
                case 86: return Color.FromArgb(25, 104, 0);
                case 87: return Color.FromArgb(78, 104, 69);
                case 88: return Color.FromArgb(19, 79, 0);
                case 89: return Color.FromArgb(59, 79, 53);
                case 90: return Color.FromArgb(0, 255, 0);
                case 91: return Color.FromArgb(170, 255, 170);
                case 92: return Color.FromArgb(0, 189, 0);
                case 93: return Color.FromArgb(126, 189, 126);
                case 94: return Color.FromArgb(0, 129, 0);
                case 95: return Color.FromArgb(86, 129, 86);
                case 96: return Color.FromArgb(0, 104, 0);
                case 97: return Color.FromArgb(69, 104, 69);
                case 98: return Color.FromArgb(0, 79, 0);
                case 99: return Color.FromArgb(53, 79, 53);
                case 100: return Color.FromArgb(0, 255, 63);
                case 101: return Color.FromArgb(170, 255, 191);
                case 102: return Color.FromArgb(0, 189, 46);
                case 103: return Color.FromArgb(126, 189, 141);
                case 104: return Color.FromArgb(0, 129, 31);
                case 105: return Color.FromArgb(86, 129, 96);
                case 106: return Color.FromArgb(0, 104, 25);
                case 107: return Color.FromArgb(69, 104, 78);
                case 108: return Color.FromArgb(0, 79, 19);
                case 109: return Color.FromArgb(53, 79, 59);
                case 110: return Color.FromArgb(0, 255, 127);
                case 111: return Color.FromArgb(170, 255, 212);
                case 112: return Color.FromArgb(0, 189, 94);
                case 113: return Color.FromArgb(126, 189, 157);
                case 114: return Color.FromArgb(0, 129, 64);
                case 115: return Color.FromArgb(86, 129, 107);
                case 116: return Color.FromArgb(0, 104, 52);
                case 117: return Color.FromArgb(69, 104, 86);
                case 118: return Color.FromArgb(0, 79, 39);
                case 119: return Color.FromArgb(53, 79, 66);
                case 120: return Color.FromArgb(0, 255, 191);
                case 121: return Color.FromArgb(170, 255, 234);
                case 122: return Color.FromArgb(0, 189, 141);
                case 123: return Color.FromArgb(126, 189, 173);
                case 124: return Color.FromArgb(0, 129, 96);
                case 125: return Color.FromArgb(86, 129, 118);
                case 126: return Color.FromArgb(0, 104, 78);
                case 127: return Color.FromArgb(69, 104, 95);
                case 128: return Color.FromArgb(0, 79, 59);
                case 129: return Color.FromArgb(53, 79, 73);
                case 130: return Color.FromArgb(0, 255, 255);
                case 131: return Color.FromArgb(170, 255, 255);
                case 132: return Color.FromArgb(0, 189, 189);
                case 133: return Color.FromArgb(126, 189, 189);
                case 134: return Color.FromArgb(0, 129, 129);
                case 135: return Color.FromArgb(86, 129, 129);
                case 136: return Color.FromArgb(0, 104, 104);
                case 137: return Color.FromArgb(69, 104, 104);
                case 138: return Color.FromArgb(0, 79, 79);
                case 139: return Color.FromArgb(53, 79, 79);
                case 140: return Color.FromArgb(0, 191, 255);
                case 141: return Color.FromArgb(170, 234, 255);
                case 142: return Color.FromArgb(0, 141, 189);
                case 143: return Color.FromArgb(126, 173, 189);
                case 144: return Color.FromArgb(0, 96, 129);
                case 145: return Color.FromArgb(86, 118, 129);
                case 146: return Color.FromArgb(0, 78, 104);
                case 147: return Color.FromArgb(69, 95, 104);
                case 148: return Color.FromArgb(0, 59, 79);
                case 149: return Color.FromArgb(53, 73, 79);
                case 150: return Color.FromArgb(0, 127, 255);
                case 151: return Color.FromArgb(170, 212, 255);
                case 152: return Color.FromArgb(0, 94, 189);
                case 153: return Color.FromArgb(126, 157, 189);
                case 154: return Color.FromArgb(0, 64, 129);
                case 155: return Color.FromArgb(86, 107, 129);
                case 156: return Color.FromArgb(0, 52, 104);
                case 157: return Color.FromArgb(69, 86, 104);
                case 158: return Color.FromArgb(0, 39, 79);
                case 159: return Color.FromArgb(53, 66, 79);
                case 160: return Color.FromArgb(0, 63, 255);
                case 161: return Color.FromArgb(170, 191, 255);
                case 162: return Color.FromArgb(0, 46, 189);
                case 163: return Color.FromArgb(126, 141, 189);
                case 164: return Color.FromArgb(0, 31, 129);
                case 165: return Color.FromArgb(86, 96, 129);
                case 166: return Color.FromArgb(0, 25, 104);
                case 167: return Color.FromArgb(69, 78, 104);
                case 168: return Color.FromArgb(0, 19, 79);
                case 169: return Color.FromArgb(53, 59, 79);
                case 170: return Color.FromArgb(0, 0, 255);
                case 171: return Color.FromArgb(170, 170, 255);
                case 172: return Color.FromArgb(0, 0, 189);
                case 173: return Color.FromArgb(126, 126, 189);
                case 174: return Color.FromArgb(0, 0, 129);
                case 175: return Color.FromArgb(86, 86, 129);
                case 176: return Color.FromArgb(0, 0, 104);
                case 177: return Color.FromArgb(69, 69, 104);
                case 178: return Color.FromArgb(0, 0, 79);
                case 179: return Color.FromArgb(53, 53, 79);
                case 180: return Color.FromArgb(63, 0, 255);
                case 181: return Color.FromArgb(191, 170, 255);
                case 182: return Color.FromArgb(46, 0, 189);
                case 183: return Color.FromArgb(141, 126, 189);
                case 184: return Color.FromArgb(31, 0, 129);
                case 185: return Color.FromArgb(96, 86, 129);
                case 186: return Color.FromArgb(25, 0, 104);
                case 187: return Color.FromArgb(78, 69, 104);
                case 188: return Color.FromArgb(19, 0, 79);
                case 189: return Color.FromArgb(59, 53, 79);
                case 190: return Color.FromArgb(127, 0, 255);
                case 191: return Color.FromArgb(212, 170, 255);
                case 192: return Color.FromArgb(94, 0, 189);
                case 193: return Color.FromArgb(157, 126, 189);
                case 194: return Color.FromArgb(64, 0, 129);
                case 195: return Color.FromArgb(107, 86, 129);
                case 196: return Color.FromArgb(52, 0, 104);
                case 197: return Color.FromArgb(86, 69, 104);
                case 198: return Color.FromArgb(39, 0, 79);
                case 199: return Color.FromArgb(66, 53, 79);
                case 200: return Color.FromArgb(191, 0, 255);
                case 201: return Color.FromArgb(234, 170, 255);
                case 202: return Color.FromArgb(141, 0, 189);
                case 203: return Color.FromArgb(173, 126, 189);
                case 204: return Color.FromArgb(96, 0, 129);
                case 205: return Color.FromArgb(118, 86, 129);
                case 206: return Color.FromArgb(78, 0, 104);
                case 207: return Color.FromArgb(95, 69, 104);
                case 208: return Color.FromArgb(59, 0, 79);
                case 209: return Color.FromArgb(73, 53, 79);
                case 210: return Color.FromArgb(255, 0, 255);
                case 211: return Color.FromArgb(255, 170, 255);
                case 212: return Color.FromArgb(189, 0, 189);
                case 213: return Color.FromArgb(189, 126, 189);
                case 214: return Color.FromArgb(129, 0, 129);
                case 215: return Color.FromArgb(129, 86, 129);
                case 216: return Color.FromArgb(104, 0, 104);
                case 217: return Color.FromArgb(104, 69, 104);
                case 218: return Color.FromArgb(79, 0, 79);
                case 219: return Color.FromArgb(79, 53, 79);
                case 220: return Color.FromArgb(255, 0, 191);
                case 221: return Color.FromArgb(255, 170, 234);
                case 222: return Color.FromArgb(189, 0, 141);
                case 223: return Color.FromArgb(189, 126, 173);
                case 224: return Color.FromArgb(129, 0, 96);
                case 225: return Color.FromArgb(129, 86, 118);
                case 226: return Color.FromArgb(104, 0, 78);
                case 227: return Color.FromArgb(104, 69, 95);
                case 228: return Color.FromArgb(79, 0, 59);
                case 229: return Color.FromArgb(79, 53, 73);
                case 230: return Color.FromArgb(255, 0, 127);
                case 231: return Color.FromArgb(255, 170, 212);
                case 232: return Color.FromArgb(189, 0, 94);
                case 233: return Color.FromArgb(189, 126, 157);
                case 234: return Color.FromArgb(129, 0, 64);
                case 235: return Color.FromArgb(129, 86, 107);
                case 236: return Color.FromArgb(104, 0, 52);
                case 237: return Color.FromArgb(104, 69, 86);
                case 238: return Color.FromArgb(79, 0, 39);
                case 239: return Color.FromArgb(79, 53, 66);
                case 240: return Color.FromArgb(255, 0, 63);
                case 241: return Color.FromArgb(255, 170, 191);
                case 242: return Color.FromArgb(189, 0, 46);
                case 243: return Color.FromArgb(189, 126, 141);
                case 244: return Color.FromArgb(129, 0, 31);
                case 245: return Color.FromArgb(129, 86, 96);
                case 246: return Color.FromArgb(104, 0, 25);
                case 247: return Color.FromArgb(104, 69, 78);
                case 248: return Color.FromArgb(79, 0, 19);
                case 249: return Color.FromArgb(79, 53, 59);
                case 250: return Color.FromArgb(51, 51, 51);
                case 251: return Color.FromArgb(80, 80, 80);
                case 252: return Color.FromArgb(105, 105, 105);
                case 253: return Color.FromArgb(130, 130, 130);
                case 254: return Color.FromArgb(190, 190, 190);
                case 255: return Color.FromArgb(255, 255, 255);
            }
            
            return Color.Empty;
        }

        public override string ToString()
        {
            return Name;
        }
    }
}
