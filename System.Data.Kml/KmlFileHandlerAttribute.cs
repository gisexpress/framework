//////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Copyright © GISExpress 2015-2022. All Rights Reserved.
//  
//  GISExpress .NET API and Component Library
//  
//  The entire contents of this file is protected by local and International Copyright Laws.
//  Unauthorized reproduction, reverse-engineering, and distribution of all or any portion of
//  the code contained in this file is strictly prohibited and may result in severe civil and 
//  criminal penalties and will be prosecuted to the maximum extent possible under the law.
//  
//  RESTRICTIONS
//  
//  THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES ARE CONFIDENTIAL AND PROPRIETARY TRADE SECRETS OF GISExpress
//  THE REGISTERED DEVELOPER IS LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET COMPONENTS AS PART OF AN EXECUTABLE PROGRAM ONLY.
//  
//  THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE
//  COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT
//  AND PERMISSION FROM GISExpress
//  
//  CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON ADDITIONAL RESTRICTIONS.
//  
//  Warning: This content was generated by GISExpress tools.
//  Changes to this content may cause incorrect behavior and will be lost if the content is regenerated.
//
///////////////////////////////////////////////////////////////////////////////////////////////////

using System.Drawing;
using System.IO;
using System.IO.Compression;
using System.Windows.Modules;
using System.Workspace;
using System.Xml;

namespace System.Data.Kml
{
    internal class KmlFileHandlerAttribute : ApplicationFileAttribute
    {
        public KmlFileHandlerAttribute()
        {
            Extensions.Add("kml");
            Extensions.Add("kmz");
        }

        public override string Name
        {
            get { return "Google Earth"; }
        }

        public override bool IsDefault
        {
            get { return true; }
        }

        public override bool CanSave
        {
            get { return true; }
        }

        public override bool CanWrite
        {
            get { return true; }
        }

        public override IProject CreateProject(IApplication application)
        {
            return new KmlProject(application);
        }

        public override MapWorkspace CreateWorkspace(IProject project)
        {
            return new KmlWorkspace((XmlDocumentBase)project);
        }

        public override MapLayer CreateLayer(IProject project)
        {
            return new KmlMapLayer((XmlDocumentBase)project);
        }

        public override Image GetIcon(string extension, int maxWidth)
        {
            return ApplicationAppereance.Images.Ico.ReSize(maxWidth);
        }

        protected override void OnRead(ApplicationFileEventArgs e)
        {
            using (var file = File.OpenRead(e.FileName))
            {
                using (Stream input = file.Open())
                {
                    e.Project.Load(e.FileName);
                }
            }
        }

        protected override void OnWrite(ApplicationFileEventArgs e)
        {
            if (e.FileName.EndsWithIgnoreCase(".kmz"))
            {
                var zip = new Zip();

                using (var output = new MemoryStream())
                {
                    e.Project.Save(output);
                    zip.Entries.Add(Path.ChangeExtension(e.FileName, "kml"), output.ToArray());
                }

                zip.Write(e.FileName);
            }
            else
            {
                e.Project.Save(e.FileName);
            }
        }
    }
}
